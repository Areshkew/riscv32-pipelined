$date
	Sat Dec 02 19:06:16 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module pipeline_CPU_TB $end
$var wire 32 ! PC [31:0] $end
$var wire 32 " MW_drdata_out [31:0] $end
$var wire 32 # L_regdata_out [31:0] $end
$var wire 32 $ EM_daddr_out [31:0] $end
$var reg 1 % clk $end
$var reg 1 & reset $end
$scope module riscv $end
$var wire 1 % clk $end
$var wire 1 & reset $end
$var wire 32 ' rv2 [31:0] $end
$var wire 32 ( rv1 [31:0] $end
$var wire 5 ) rs2 [4:0] $end
$var wire 5 * rs1 [4:0] $end
$var wire 5 + rd_final [4:0] $end
$var wire 5 , rd [4:0] $end
$var wire 1 - pc_replace $end
$var wire 1 . pc_JALR $end
$var wire 32 / idata [31:0] $end
$var wire 1 0 WB_wer_out $end
$var wire 32 1 WB_regdata_out [31:0] $end
$var wire 5 2 WB_rd_out [4:0] $end
$var wire 32 3 PC_new [31:0] $end
$var wire 1 4 MW_wer_out $end
$var wire 32 5 MW_regdata_out [31:0] $end
$var wire 5 6 MW_rd_out [4:0] $end
$var wire 7 7 MW_op_out [6:0] $end
$var wire 3 8 MW_funct3_out [2:0] $end
$var wire 32 9 MW_drdata_out [31:0] $end
$var wire 32 : MW_daddr_out [31:0] $end
$var wire 32 ; L_regdata_out [31:0] $end
$var wire 32 < FD_idata_out [31:0] $end
$var wire 32 = FD_PC_out [31:0] $end
$var wire 1 > EM_wer_out $end
$var wire 4 ? EM_we_out [3:0] $end
$var wire 32 @ EM_regdata_out [31:0] $end
$var wire 5 A EM_rd_out [4:0] $end
$var wire 1 B EM_pc_replace_out $end
$var wire 7 C EM_op_out [6:0] $end
$var wire 3 D EM_funct3_out [2:0] $end
$var wire 1 E EM_enable_out $end
$var wire 32 F EM_dwdata_out [31:0] $end
$var wire 32 G EM_daddr_out [31:0] $end
$var wire 32 H DMEM_drdata_out [31:0] $end
$var wire 1 I DE_wer_out $end
$var wire 4 J DE_we_out [3:0] $end
$var wire 32 K DE_rv2_out [31:0] $end
$var wire 32 L DE_rv1_out [31:0] $end
$var wire 5 M DE_rs2_out [4:0] $end
$var wire 5 N DE_rs1_out [4:0] $end
$var wire 5 O DE_rd_out [4:0] $end
$var wire 7 P DE_op_out [6:0] $end
$var wire 32 Q DE_imm_out [31:0] $end
$var wire 3 R DE_funct3_out [2:0] $end
$var wire 1 S DE_enable_out $end
$var wire 1 T DE_bit_th_out $end
$var wire 32 U DE_PC_out [31:0] $end
$var wire 1 V CU_wer_out $end
$var wire 4 W CU_we_out [3:0] $end
$var wire 32 X CU_imm_out [31:0] $end
$var wire 4 Y AU_we_out [3:0] $end
$var wire 32 Z AU_regdata_out [31:0] $end
$var wire 32 [ AU_pc_out [31:0] $end
$var wire 32 \ AU_dwdata_out [31:0] $end
$var wire 32 ] AU_daddr_out [31:0] $end
$var reg 32 ^ AU_rv1_in [31:0] $end
$var reg 32 _ AU_rv2_in [31:0] $end
$var reg 32 ` PC [31:0] $end
$var reg 32 a PC_upd [31:0] $end
$var reg 1 b act $end
$var reg 1 c enable $end
$scope module a1 $end
$var wire 32 d rv1 [31:0] $end
$var wire 32 e rv2 [31:0] $end
$var wire 4 f we [3:0] $end
$var wire 32 g regdata_R [31:0] $end
$var wire 32 h regdata_I [31:0] $end
$var wire 1 B pc_replace_old $end
$var wire 7 i op [6:0] $end
$var wire 1 j jump_enable $end
$var wire 32 k imm [31:0] $end
$var wire 3 l funct3 [2:0] $end
$var wire 1 E enable_old $end
$var wire 1 T bit_th $end
$var wire 32 m PC_val [31:0] $end
$var wire 32 n PC [31:0] $end
$var reg 32 o PC_new [31:0] $end
$var reg 32 p daddr [31:0] $end
$var reg 32 q dwdata [31:0] $end
$var reg 32 r pc [31:0] $end
$var reg 1 . pc_JALR $end
$var reg 1 - pc_replace $end
$var reg 32 s regdata [31:0] $end
$var reg 4 t we_final [3:0] $end
$scope module b1 $end
$var wire 32 u rv1 [31:0] $end
$var wire 32 v rv2 [31:0] $end
$var wire 32 w tempA [31:0] $end
$var wire 32 x tempB [31:0] $end
$var wire 32 y imm [31:0] $end
$var wire 3 z funct3 [2:0] $end
$var wire 32 { PC [31:0] $end
$var reg 1 j jump_enable $end
$var reg 32 | out [31:0] $end
$upscope $end
$scope module i1 $end
$var wire 32 } rdata1 [31:0] $end
$var wire 32 ~ tempA [31:0] $end
$var wire 12 !" tempB [11:0] $end
$var wire 1 T srli_e $end
$var wire 32 "" imm [31:0] $end
$var wire 3 #" func3 [2:0] $end
$var reg 32 $" out [31:0] $end
$upscope $end
$scope module r1 $end
$var wire 32 %" operator1 [31:0] $end
$var wire 32 &" operator2 [31:0] $end
$var wire 32 '" tempA [31:0] $end
$var wire 32 (" tempB [31:0] $end
$var wire 3 )" func3 [2:0] $end
$var wire 1 T bit_th $end
$var reg 32 *" out [31:0] $end
$upscope $end
$upscope $end
$scope module c1 $end
$var wire 32 +" instr32 [31:0] $end
$var reg 32 ," imm [31:0] $end
$var reg 4 -" we [3:0] $end
$var reg 1 V we_reg $end
$upscope $end
$scope module de1 $end
$var wire 1 ." bit_th_in $end
$var wire 1 % clk $end
$var wire 1 c enable $end
$var wire 3 /" funct3_in [2:0] $end
$var wire 32 0" imm_in [31:0] $end
$var wire 7 1" op [6:0] $end
$var wire 1 - pc_replace $end
$var wire 5 2" rd_in [4:0] $end
$var wire 5 3" rs1_in [4:0] $end
$var wire 5 4" rs2_in [4:0] $end
$var wire 4 5" we_in [3:0] $end
$var wire 1 V wer_in $end
$var wire 32 6" rv2_in [31:0] $end
$var wire 32 7" rv1_in [31:0] $end
$var wire 32 8" iaddr_in [31:0] $end
$var reg 1 S DE_enable_out $end
$var reg 3 9" DE_funct3_out [2:0] $end
$var reg 32 :" DE_iaddr_out [31:0] $end
$var reg 32 ;" DE_imm_out [31:0] $end
$var reg 7 <" DE_op_out [6:0] $end
$var reg 5 =" DE_rd_out [4:0] $end
$var reg 5 >" DE_rs1_out [4:0] $end
$var reg 5 ?" DE_rs2_out [4:0] $end
$var reg 32 @" DE_rv1_out [31:0] $end
$var reg 32 A" DE_rv2_out [31:0] $end
$var reg 4 B" DE_we_out [3:0] $end
$var reg 1 I DE_wer_out $end
$var reg 1 T bit_th_out $end
$upscope $end
$scope module dm1 $end
$var wire 1 % clk $end
$var wire 4 C" we [3:0] $end
$var wire 32 D" dwdata [31:0] $end
$var wire 32 E" drdata [31:0] $end
$var wire 32 F" byte3 [31:0] $end
$var wire 32 G" byte2 [31:0] $end
$var wire 32 H" byte1 [31:0] $end
$var wire 32 I" byte0 [31:0] $end
$var wire 32 J" address [31:0] $end
$upscope $end
$scope module em1 $end
$var wire 32 K" AU_daddr_out [31:0] $end
$var wire 32 L" AU_dwdata_out [31:0] $end
$var wire 32 M" AU_regdata_out [31:0] $end
$var wire 4 N" AU_we_out [3:0] $end
$var wire 3 O" DE_funct3_out [2:0] $end
$var wire 7 P" DE_op_out [6:0] $end
$var wire 5 Q" DE_rd_out [4:0] $end
$var wire 1 I DE_wer_out $end
$var wire 1 b act $end
$var wire 1 % clk $end
$var wire 1 c enable $end
$var wire 1 - pc_replace $end
$var reg 32 R" EM_daddr_out [31:0] $end
$var reg 32 S" EM_dwdata_out [31:0] $end
$var reg 1 E EM_enable_out $end
$var reg 3 T" EM_funct3_out [2:0] $end
$var reg 7 U" EM_op_out [6:0] $end
$var reg 1 B EM_pc_replace_out $end
$var reg 5 V" EM_rd_out [4:0] $end
$var reg 32 W" EM_regdata_out [31:0] $end
$var reg 4 X" EM_we_out [3:0] $end
$var reg 1 > EM_wer_out $end
$upscope $end
$scope module fd1 $end
$var wire 32 Y" PC_in [31:0] $end
$var wire 1 % clk $end
$var wire 1 c enable $end
$var wire 1 - pc_replace $end
$var wire 32 Z" idata_in [31:0] $end
$var reg 32 [" FD_PC_out [31:0] $end
$var reg 32 \" FD_idata_out [31:0] $end
$upscope $end
$scope module im1 $end
$var wire 32 ]" iaddr [31:0] $end
$var wire 32 ^" idata [31:0] $end
$upscope $end
$scope module l1 $end
$var wire 32 _" MW_regdata_out [31:0] $end
$var wire 7 `" MW_op_out [6:0] $end
$var wire 3 a" MW_funct3_out [2:0] $end
$var wire 32 b" MW_drdata_out [31:0] $end
$var wire 32 c" MW_daddr_out [31:0] $end
$var reg 32 d" L_regdata_out [31:0] $end
$var reg 32 e" offset [31:0] $end
$upscope $end
$scope module mw1 $end
$var wire 32 f" DMEM_drdata_out [31:0] $end
$var wire 32 g" EM_daddr_out [31:0] $end
$var wire 3 h" EM_funct3_out [2:0] $end
$var wire 7 i" EM_op_out [6:0] $end
$var wire 5 j" EM_rd_out [4:0] $end
$var wire 32 k" EM_regdata_out [31:0] $end
$var wire 1 > EM_wer_out $end
$var wire 1 % clk $end
$var reg 32 l" MW_daddr_out [31:0] $end
$var reg 32 m" MW_drdata_out [31:0] $end
$var reg 3 n" MW_funct3_out [2:0] $end
$var reg 7 o" MW_op_out [6:0] $end
$var reg 5 p" MW_rd_out [4:0] $end
$var reg 32 q" MW_regdata_out [31:0] $end
$var reg 1 4 MW_wer_out $end
$upscope $end
$scope module rf1 $end
$var wire 1 % clk $end
$var wire 5 r" rd [4:0] $end
$var wire 32 s" regdata [31:0] $end
$var wire 5 t" rs1 [4:0] $end
$var wire 5 u" rs2 [4:0] $end
$var wire 32 v" rv1 [31:0] $end
$var wire 32 w" rv2 [31:0] $end
$var wire 1 4 wer $end
$var integer 32 x" i [31:0] $end
$upscope $end
$scope module wb1 $end
$var wire 32 y" L_regdata_out [31:0] $end
$var wire 5 z" MW_rd_out [4:0] $end
$var wire 1 4 MW_wer_out $end
$var wire 1 % clk $end
$var reg 5 {" WB_rd_out [4:0] $end
$var reg 32 |" WB_regdata_out [31:0] $end
$var reg 1 0 WB_wer_out $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx |"
bx {"
bx z"
bx y"
b100000 x"
bx w"
bx v"
bx u"
bx t"
bx s"
b0 r"
bx q"
bx p"
bx o"
bx n"
bx m"
bx l"
bx k"
bx j"
bx i"
bx h"
bx g"
bx f"
bx e"
bx d"
bx c"
bx b"
bx a"
bx `"
bx _"
b10100000000001000010011 ^"
b0 ]"
bx \"
bx ["
b10100000000001000010011 Z"
b0 Y"
bx X"
bx W"
bx V"
bx U"
bx T"
bx S"
bx R"
bx Q"
bx P"
bx O"
bx N"
bx M"
bx L"
bx K"
bx J"
bx I"
bx H"
bx G"
bx F"
bx E"
bx D"
bx C"
bx B"
bx A"
bx @"
bx ?"
bx >"
bx ="
bx <"
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
bx 6"
bx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
x."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx v
bx u
bx t
bx s
bx r
bx q
bx p
b0 o
bx n
bx m
bx l
bx k
xj
bx i
bx h
bx g
bx f
bx e
bx d
1c
1b
b0 a
b0 `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
xV
bx U
xT
xS
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
xI
bx H
bx G
bx F
xE
bx D
bx C
0B
bx A
bx @
bx ?
x>
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
x4
b0 3
bx 2
bx 1
x0
b10100000000001000010011 /
0.
0-
bx ,
b0 +
bx *
bx )
bx (
bx '
1&
1%
bx $
bx #
bx "
b0 !
$end
#5000
b10011 1"
b0 /"
0."
b100 ,
b100 2"
b0 '
b0 6"
b0 w"
b101 )
b101 4"
b101 u"
b0 (
b0 7"
b0 v"
b0 *
b0 3"
b0 t"
b0 W
b0 -"
b0 5"
1V
b101 X
b101 ,"
b101 0"
b0 =
b0 8"
b0 ["
b10100000000001000010011 <
b10100000000001000010011 +"
b10100000000001000010011 \"
0%
#10000
b1000000000001010010011 /
b1000000000001010010011 Z"
b1000000000001010010011 ^"
b101 !"
b0 Y
b0 t
b0 N"
b101 Z
b101 s
b101 M"
1j
b11111111111111111111111111111001 m
b11111111111111111111111111111001 |
b101 h
b101 $"
b0 g
b0 *"
b0 x
b0 ("
b0 _
b0 e
b0 v
b0 &"
b0 w
b0 ~
b0 '"
b0 ^
b0 d
b0 u
b0 }
b0 %"
b100 !
b100 `
b100 Y"
b100 ]"
10
b100 2
b100 {"
b100 6
b100 p"
b100 z"
14
b10011 7
b10011 `"
b10011 o"
b0 8
b0 a"
b0 n"
1E
b100 A
b100 V"
b100 j"
1>
b0 D
b0 T"
b0 h"
b10011 C
b10011 U"
b10011 i"
1S
0T
b0 K
b0 A"
b0 L
b0 @"
b0 J
b0 f
b0 B"
1I
b0 U
b0 n
b0 {
b0 :"
b101 Q
b101 k
b101 y
b101 ""
b101 ;"
b10011 P
b10011 i
b10011 <"
b10011 P"
b0 R
b0 l
b0 z
b0 #"
b0 )"
b0 9"
b0 O"
b100 O
b100 ="
b100 Q"
b101 M
b101 ?"
b0 N
b0 >"
1%
0&
#15000
b101 ,
b101 2"
b10 )
b10 4"
b10 u"
b10 X
b10 ,"
b10 0"
b100 =
b100 8"
b100 ["
b1000000000001010010011 <
b1000000000001010010011 +"
b1000000000001010010011 \"
0%
#20000
b10 !"
b10 Z
b10 s
b10 M"
b10 h
b10 $"
b11000000000001100010011 /
b11000000000001100010011 Z"
b11000000000001100010011 ^"
b100 U
b100 n
b100 {
b100 :"
b10 Q
b10 k
b10 y
b10 ""
b10 ;"
b101 O
b101 ="
b101 Q"
b10 M
b10 ?"
b101 @
b101 W"
b101 k"
b0 ?
b0 C"
b0 X"
b1000 !
b1000 `
b1000 Y"
b1000 ]"
1%
#25000
b110 ,
b110 2"
b110 )
b110 4"
b110 u"
b110 X
b110 ,"
b110 0"
b1000 =
b1000 8"
b1000 ["
b11000000000001100010011 <
b11000000000001100010011 +"
b11000000000001100010011 \"
0%
#30000
b11100000000001110010011 /
b11100000000001110010011 Z"
b11100000000001110010011 ^"
b10 #
b10 ;
b10 d"
b10 s"
b10 y"
b110 !"
b110 Z
b110 s
b110 M"
b110 h
b110 $"
b1100 !
b1100 `
b1100 Y"
b1100 ]"
b110 2
b110 {"
b10 5
b10 _"
b10 q"
b110 6
b110 p"
b110 z"
b10 @
b10 W"
b10 k"
b110 A
b110 V"
b110 j"
b1000 U
b1000 n
b1000 {
b1000 :"
b110 Q
b110 k
b110 y
b110 ""
b110 ;"
b110 O
b110 ="
b110 Q"
b110 M
b110 ?"
1%
#35000
b111 ,
b111 2"
b111 )
b111 4"
b111 u"
b111 X
b111 ,"
b111 0"
b1100 =
b1100 8"
b1100 ["
b11100000000001110010011 <
b11100000000001110010011 +"
b11100000000001110010011 \"
0%
#40000
b111 !"
b111 Z
b111 s
b111 M"
b111 h
b111 $"
b110 +
b110 r"
b100000000000010000010011 /
b100000000000010000010011 Z"
b100000000000010000010011 ^"
b1100 U
b1100 n
b1100 {
b1100 :"
b111 Q
b111 k
b111 y
b111 ""
b111 ;"
b111 O
b111 ="
b111 Q"
b111 M
b111 ?"
b110 @
b110 W"
b110 k"
b10 1
b10 |"
b10000 !
b10000 `
b10000 Y"
b10000 ]"
1%
#45000
b1000 ,
b1000 2"
b1000 )
b1000 4"
b1000 u"
b1000 X
b1000 ,"
b1000 0"
b10000 =
b10000 8"
b10000 ["
b100000000000010000010011 <
b100000000000010000010011 +"
b100000000000010000010011 \"
0%
#50000
b100100000000010010010011 /
b100100000000010010010011 Z"
b100100000000010010010011 ^"
b111 #
b111 ;
b111 d"
b111 s"
b111 y"
b1000 +
b1000 r"
b1000 !"
b1000 Z
b1000 s
b1000 M"
b1000 h
b1000 $"
b10100 !
b10100 `
b10100 Y"
b10100 ]"
b1000 2
b1000 {"
b111 5
b111 _"
b111 q"
b1000 6
b1000 p"
b1000 z"
b111 @
b111 W"
b111 k"
b1000 A
b1000 V"
b1000 j"
b10000 U
b10000 n
b10000 {
b10000 :"
b1000 Q
b1000 k
b1000 y
b1000 ""
b1000 ;"
b1000 O
b1000 ="
b1000 Q"
b1000 M
b1000 ?"
1%
#55000
b1001 ,
b1001 2"
b1001 )
b1001 4"
b1001 u"
b1001 X
b1001 ,"
b1001 0"
b10100 =
b10100 8"
b10100 ["
b100100000000010010010011 <
b100100000000010010010011 +"
b100100000000010010010011 \"
0%
#60000
b1001 !"
b1001 Z
b1001 s
b1001 M"
b1001 h
b1001 $"
b101000000000010100010011 /
b101000000000010100010011 Z"
b101000000000010100010011 ^"
b10100 U
b10100 n
b10100 {
b10100 :"
b1001 Q
b1001 k
b1001 y
b1001 ""
b1001 ;"
b1001 O
b1001 ="
b1001 Q"
b1001 M
b1001 ?"
b1000 @
b1000 W"
b1000 k"
b111 1
b111 |"
b11000 !
b11000 `
b11000 Y"
b11000 ]"
1%
#65000
b1010 ,
b1010 2"
b1010 )
b1010 4"
b1010 u"
b1010 X
b1010 ,"
b1010 0"
b11000 =
b11000 8"
b11000 ["
b101000000000010100010011 <
b101000000000010100010011 +"
b101000000000010100010011 \"
0%
#70000
b101100000000010110010011 /
b101100000000010110010011 Z"
b101100000000010110010011 ^"
b1001 #
b1001 ;
b1001 d"
b1001 s"
b1001 y"
b1010 +
b1010 r"
b1010 !"
b1010 Z
b1010 s
b1010 M"
b1010 h
b1010 $"
b11100 !
b11100 `
b11100 Y"
b11100 ]"
b1010 2
b1010 {"
b1001 5
b1001 _"
b1001 q"
b1010 6
b1010 p"
b1010 z"
b1001 @
b1001 W"
b1001 k"
b1010 A
b1010 V"
b1010 j"
b11000 U
b11000 n
b11000 {
b11000 :"
b1010 Q
b1010 k
b1010 y
b1010 ""
b1010 ;"
b1010 O
b1010 ="
b1010 Q"
b1010 M
b1010 ?"
1%
#75000
b1011 ,
b1011 2"
b1011 )
b1011 4"
b1011 u"
b1011 X
b1011 ,"
b1011 0"
b11100 =
b11100 8"
b11100 ["
b101100000000010110010011 <
b101100000000010110010011 +"
b101100000000010110010011 \"
0%
#80000
b1011 !"
b1011 Z
b1011 s
b1011 M"
b1011 h
b1011 $"
b110000000000011000010011 /
b110000000000011000010011 Z"
b110000000000011000010011 ^"
b11100 U
b11100 n
b11100 {
b11100 :"
b1011 Q
b1011 k
b1011 y
b1011 ""
b1011 ;"
b1011 O
b1011 ="
b1011 Q"
b1011 M
b1011 ?"
b1010 @
b1010 W"
b1010 k"
b1001 1
b1001 |"
b100000 !
b100000 `
b100000 Y"
b100000 ]"
1%
#85000
b1100 ,
b1100 2"
b1100 )
b1100 4"
b1100 u"
b1100 X
b1100 ,"
b1100 0"
b100000 =
b100000 8"
b100000 ["
b110000000000011000010011 <
b110000000000011000010011 +"
b110000000000011000010011 \"
0%
#90000
b110100000000011010010011 /
b110100000000011010010011 Z"
b110100000000011010010011 ^"
b1011 #
b1011 ;
b1011 d"
b1011 s"
b1011 y"
b1100 +
b1100 r"
b1100 !"
b1100 Z
b1100 s
b1100 M"
b1100 h
b1100 $"
b100100 !
b100100 `
b100100 Y"
b100100 ]"
b1100 2
b1100 {"
b1011 5
b1011 _"
b1011 q"
b1100 6
b1100 p"
b1100 z"
b1011 @
b1011 W"
b1011 k"
b1100 A
b1100 V"
b1100 j"
b100000 U
b100000 n
b100000 {
b100000 :"
b1100 Q
b1100 k
b1100 y
b1100 ""
b1100 ;"
b1100 O
b1100 ="
b1100 Q"
b1100 M
b1100 ?"
1%
#95000
b1101 ,
b1101 2"
b1101 )
b1101 4"
b1101 u"
b1101 X
b1101 ,"
b1101 0"
b100100 =
b100100 8"
b100100 ["
b110100000000011010010011 <
b110100000000011010010011 +"
b110100000000011010010011 \"
0%
#100000
b1101 !"
b1101 Z
b1101 s
b1101 M"
b1101 h
b1101 $"
b10100100000011100110011 /
b10100100000011100110011 Z"
b10100100000011100110011 ^"
b100100 U
b100100 n
b100100 {
b100100 :"
b1101 Q
b1101 k
b1101 y
b1101 ""
b1101 ;"
b1101 O
b1101 ="
b1101 Q"
b1101 M
b1101 ?"
b1100 @
b1100 W"
b1100 k"
b1011 1
b1011 |"
b101000 !
b101000 `
b101000 Y"
b101000 ]"
1%
#105000
b110011 1"
b1110 ,
b1110 2"
b101 )
b101 4"
b101 u"
b100 *
b100 3"
b100 t"
b101000 =
b101000 8"
b101000 ["
b10100100000011100110011 <
b10100100000011100110011 +"
b10100100000011100110011 \"
0%
#110000
b0 /
b0 Z"
b0 ^"
b1110 +
b1110 r"
b1101 #
b1101 ;
b1101 d"
b1101 s"
b1101 y"
b0 Z
b0 s
b0 M"
b101100 !
b101100 `
b101100 Y"
b101100 ]"
b1110 2
b1110 {"
b1101 5
b1101 _"
b1101 q"
b1110 6
b1110 p"
b1110 z"
b110011 7
b110011 `"
b110011 o"
b1101 @
b1101 W"
b1101 k"
b1110 A
b1110 V"
b1110 j"
b110011 C
b110011 U"
b110011 i"
b101000 U
b101000 n
b101000 {
b101000 :"
b110011 P
b110011 i
b110011 <"
b110011 P"
b1110 O
b1110 ="
b1110 Q"
b101 M
b101 ?"
b100 N
b100 >"
1%
#115000
b0 1"
b0 ,
b0 2"
b0 )
b0 4"
b0 u"
b0 *
b0 3"
b0 t"
b101100 =
b101100 8"
b101100 ["
b0 <
b0 +"
b0 \"
0%
#120000
bx /
bx Z"
bx ^"
b101100 U
b101100 n
b101100 {
b101100 :"
b0 P
b0 i
b0 <"
b0 P"
b0 O
b0 ="
b0 Q"
b0 M
b0 ?"
b0 N
b0 >"
b0 @
b0 W"
b0 k"
b1101 1
b1101 |"
b110000 !
b110000 `
b110000 Y"
b110000 ]"
1%
#125000
bx 1"
bx /"
x."
bx ,
bx 2"
bx '
bx 6"
bx w"
bx )
bx 4"
bx u"
bx (
bx 7"
bx v"
bx *
bx 3"
bx t"
b110000 =
b110000 8"
b110000 ["
bx <
bx +"
bx \"
0%
#130000
bx +
bx r"
b0 #
b0 ;
b0 d"
b0 s"
b0 y"
bx x
bx ("
bx _
bx e
bx v
bx &"
bx w
bx ~
bx '"
bx ^
bx d
bx u
bx }
bx %"
b110100 !
b110100 `
b110100 Y"
b110100 ]"
bx 2
bx {"
b0 5
b0 _"
b0 q"
bx 6
bx p"
bx z"
bx 7
bx `"
bx o"
bx 8
bx a"
bx n"
bx A
bx V"
bx j"
bx D
bx T"
bx h"
bx C
bx U"
bx i"
xT
bx K
bx A"
bx L
bx @"
b110000 U
b110000 n
b110000 {
b110000 :"
bx P
bx i
bx <"
bx P"
bx R
bx l
bx z
bx #"
bx )"
bx 9"
bx O"
bx O
bx ="
bx Q"
bx M
bx ?"
bx N
bx >"
1%
#135000
b110100 =
b110100 8"
b110100 ["
0%
#140000
b110100 U
b110100 n
b110100 {
b110100 :"
b0 1
b0 |"
b111000 !
b111000 `
b111000 Y"
b111000 ]"
1%
#145000
b111000 =
b111000 8"
b111000 ["
0%
#150000
b111100 !
b111100 `
b111100 Y"
b111100 ]"
b111000 U
b111000 n
b111000 {
b111000 :"
1%
#155000
b111100 =
b111100 8"
b111100 ["
0%
#160000
b111100 U
b111100 n
b111100 {
b111100 :"
b1000000 !
b1000000 `
b1000000 Y"
b1000000 ]"
1%
#165000
b1000000 =
b1000000 8"
b1000000 ["
0%
#170000
b1000100 !
b1000100 `
b1000100 Y"
b1000100 ]"
b1000000 U
b1000000 n
b1000000 {
b1000000 :"
1%
#175000
b1000100 =
b1000100 8"
b1000100 ["
0%
#180000
b1000100 U
b1000100 n
b1000100 {
b1000100 :"
b1001000 !
b1001000 `
b1001000 Y"
b1001000 ]"
1%
#185000
b1001000 =
b1001000 8"
b1001000 ["
0%
#190000
b1001100 !
b1001100 `
b1001100 Y"
b1001100 ]"
b1001000 U
b1001000 n
b1001000 {
b1001000 :"
1%
#195000
b1001100 =
b1001100 8"
b1001100 ["
0%
#200000
b1001100 U
b1001100 n
b1001100 {
b1001100 :"
b1010000 !
b1010000 `
b1010000 Y"
b1010000 ]"
1%
#205000
b1010000 =
b1010000 8"
b1010000 ["
0%
#210000
b1010100 !
b1010100 `
b1010100 Y"
b1010100 ]"
b1010000 U
b1010000 n
b1010000 {
b1010000 :"
1%
#215000
b1010100 =
b1010100 8"
b1010100 ["
0%
#220000
b1010100 U
b1010100 n
b1010100 {
b1010100 :"
b1011000 !
b1011000 `
b1011000 Y"
b1011000 ]"
1%
#225000
b1011000 =
b1011000 8"
b1011000 ["
0%
#230000
b1011100 !
b1011100 `
b1011100 Y"
b1011100 ]"
b1011000 U
b1011000 n
b1011000 {
b1011000 :"
1%
#235000
b1011100 =
b1011100 8"
b1011100 ["
0%
#240000
b1011100 U
b1011100 n
b1011100 {
b1011100 :"
b1100000 !
b1100000 `
b1100000 Y"
b1100000 ]"
1%
#245000
b1100000 =
b1100000 8"
b1100000 ["
0%
#250000
b1100100 !
b1100100 `
b1100100 Y"
b1100100 ]"
b1100000 U
b1100000 n
b1100000 {
b1100000 :"
1%
